version: "3.9"

services:
  db:
    image: postgis/postgis:14-3.2
    container_name: aed-postgres
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-aed_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - aed-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aed-api
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@db/${DB_NAME:-aed_db}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-aed_db}
      - DB_HOST=db
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - /app/node_modules
    command: bash /app/start.sh
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - aed-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: aed-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@example.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "8181:80"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - aed-network

networks:
  aed-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
